version: '3.4'

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    networks:
      - aws-local
    ports:
      - "4566:4566"
      - "4571:4571"
      #- "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=${SERVICES- }
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      #- PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
    volumes:
      - "/home/joao/volumes-containers/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  nifi:
    container_name: nifi
    image: apache/nifi:latest
    ports:
      # HTTP
      - 8080:8080/tcp
      # HTTPS
      - 8443:8443/tcp
      # Remote Input Socket
      - 10000:10000/tcp
      # JVM Debugger
      - 8000:8000/tcp
      # Cluster Node Protocol
      #- 11443:11443/tcp
    volumes:
      - ./home/joao/volumes-containers/nifi/conf:/opt/conf
      - ./home/joao/volumes-containers/nifi/nifi_state:/data/nifi/state 
    networks:
      - aws-local
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "test"
    ports:
      - "15432:5432"
    volumes:
      - /home/joao/volumes-containers/postgres:/var/lib/postgresql/data 
    networks:
      - aws-local
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "test"
      PGADMIN_DEFAULT_PASSWORD: "test"
    ports:
      - "16543:81"
    depends_on:
      - db
    networks:
      - aws-local
      
networks:
  aws-local:
    driver: bridge